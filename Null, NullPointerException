## null
참조형 변수에는 항상 객체가 있는 위치를 가리키는 참조값이 들어간다.
그런데 아직 가리키는 대상이 없거나 카리키는 대상을 나중에 입력하고 싶으면
"null"이라는 특별한 값을 넣어둘 수 있다.

C와 같은 과거 프로그래밍 언어는 개발자가 직접 명령어를 사용해서 인스턴스를 메모리에서 제거해야 했다.
만약 실수로 인스턴스 삭제를 누락하면 메모리에 사용하지 않는 객체가 가득해져서 메모리 부족 오류가 발생하게 된다.
자바는 이런 과정을 자동으로 처리해준다.
아무도 참조하지 않는 인스턴스가 있으면 JVM의 GC(가비지 컬렉션)가 더 이상 사용하지 않는 인스턴스라 판단하고
해당 인스턴스를 자동으로 메모리에서 제거해준다.
객체는 해당 객체를 참조하는 곳이 있으면, JVM이 종료할 때 까지 계속 생존한다.
그런데 중간에 해당 객체를 참조하는 곳이 모두 사라지면 그때 JVM은 필요 없는 객체로 판단다고 GC(가비지 컬렉션)를 사용해서 제거한다.

##NullPointerException
참조값 없이 객체를 찾아가면 어떤 문제가 발생할까?
이떄 NullPointerException 이라는 예외가 발생한다.
이름 그대로 null을 가리키는 것인데 주소가 없는 곳을 찾아 갈 때 발생한다.
객체를 참조할 때 "."를 사용한다. null에 "."울 찍었울 때 발생한다
